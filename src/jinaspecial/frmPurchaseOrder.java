
package jinaspecial;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author Vaibhav
 */
public class frmPurchaseOrder extends javax.swing.JFrame {

    
     dbConnection db=new dbConnection();
     Connection con;
     Statement st;
     ResultSet rs;
 DefaultTableModel model=new DefaultTableModel();
 DefaultTableModel model1=new DefaultTableModel();
 DefaultTableModel model2=new DefaultTableModel();
  int i=model.getRowCount();
  double price=0;
  double taxAmt,totalAmount;
    /** Creates new form frmDeaprtment */
    public frmPurchaseOrder() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTranpotation = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtRefNo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtRate = new javax.swing.JTextField();
        btnADDMaterial = new javax.swing.JButton();
        btnUPDATE = new javax.swing.JButton();
        btnDELETE = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSupp = new javax.swing.JTable();
        dtPO = new datechooser.beans.DateChooserCombo();
        dtRef = new datechooser.beans.DateChooserCombo();
        cmbTo = new javax.swing.JComboBox();
        cmbItem = new javax.swing.JComboBox();
        btnADD1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtUnit = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rd1 = new javax.swing.JRadioButton();
        rd2 = new javax.swing.JRadioButton();
        rd3 = new javax.swing.JRadioButton();
        txtDiscount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cmbTax = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txttottax = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txttotdis = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPo1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPenPO = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        txtPONo = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        dtDeliveryDate = new datechooser.beans.DateChooserCombo();
        jLabel19 = new javax.swing.JLabel();
        txtPaymentTerms = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtPackingCost = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cmbMake = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        txtGrrNo = new javax.swing.JTextField();

        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.setName("jPasswordField1"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Purchase Order");
        setIconImages(null);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(240, 240, 240));
        jDesktopPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jDesktopPane1.setMaximumSize(new java.awt.Dimension(1147483647, 2147483647));
        jDesktopPane1.setName("jDesktopPane1"); // NOI18N
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(80, 100));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel1.setText("Ref No:");
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.setBounds(30, 20, 60, 20);
        jDesktopPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel2.setText("Ref Date:");
        jLabel2.setName("jLabel2"); // NOI18N
        jLabel2.setBounds(30, 50, 60, 20);
        jDesktopPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel3.setText("To:");
        jLabel3.setName("jLabel3"); // NOI18N
        jLabel3.setBounds(30, 80, 40, 20);
        jDesktopPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel4.setText("Item:");
        jLabel4.setName("jLabel4"); // NOI18N
        jLabel4.setBounds(30, 110, 50, 20);
        jDesktopPane1.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel5.setText("Charges  :");
        jLabel5.setName("jLabel5"); // NOI18N
        jLabel5.setBounds(30, 260, 90, 30);
        jDesktopPane1.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtTranpotation.setBackground(new java.awt.Color(255, 255, 204));
        txtTranpotation.setName("txtTranpotation"); // NOI18N
        txtTranpotation.setBounds(110, 260, 160, 20);
        jDesktopPane1.add(txtTranpotation, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel12.setText("Discount:");
        jLabel12.setName("jLabel12"); // NOI18N
        jLabel12.setBounds(360, 170, 50, 20);
        jDesktopPane1.add(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtRefNo.setBackground(new java.awt.Color(255, 255, 204));
        txtRefNo.setName("txtRefNo"); // NOI18N
        txtRefNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtRefNoMouseExited(evt);
            }
        });
        txtRefNo.setBounds(90, 20, 180, 20);
        jDesktopPane1.add(txtRefNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel13.setText("P.O.Date:");
        jLabel13.setName("jLabel13"); // NOI18N
        jLabel13.setBounds(360, 50, 60, 20);
        jDesktopPane1.add(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel14.setText("Unit:");
        jLabel14.setName("jLabel14"); // NOI18N
        jLabel14.setBounds(360, 80, 70, 20);
        jDesktopPane1.add(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel15.setText("Rate:");
        jLabel15.setName("jLabel15"); // NOI18N
        jLabel15.setBounds(360, 110, 70, 20);
        jDesktopPane1.add(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtRate.setBackground(new java.awt.Color(255, 255, 204));
        txtRate.setName("txtRate"); // NOI18N
        txtRate.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtRateCaretUpdate(evt);
            }
        });
        txtRate.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                txtRateCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtRateInputMethodTextChanged(evt);
            }
        });
        txtRate.setBounds(450, 110, 180, 20);
        jDesktopPane1.add(txtRate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnADDMaterial.setFont(new java.awt.Font("Times New Roman", 1, 11));
        btnADDMaterial.setForeground(new java.awt.Color(0, 51, 255));
        btnADDMaterial.setText("ADD");
        btnADDMaterial.setName("btnADDMaterial"); // NOI18N
        btnADDMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDMaterialActionPerformed(evt);
            }
        });
        btnADDMaterial.setBounds(240, 330, 80, 21);
        jDesktopPane1.add(btnADDMaterial, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnUPDATE.setFont(new java.awt.Font("Times New Roman", 1, 11));
        btnUPDATE.setForeground(new java.awt.Color(51, 0, 255));
        btnUPDATE.setText("UPDATE");
        btnUPDATE.setName("btnUPDATE"); // NOI18N
        btnUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPDATEActionPerformed(evt);
            }
        });
        btnUPDATE.setBounds(180, 610, 80, 30);
        jDesktopPane1.add(btnUPDATE, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnDELETE.setFont(new java.awt.Font("Times New Roman", 1, 11));
        btnDELETE.setForeground(new java.awt.Color(255, 51, 51));
        btnDELETE.setText("DELETE");
        btnDELETE.setName("btnDELETE"); // NOI18N
        btnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELETEActionPerformed(evt);
            }
        });
        btnDELETE.setBounds(270, 610, 90, 30);
        jDesktopPane1.add(btnDELETE, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tblSupp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSupp.setName("tblSupp"); // NOI18N
        tblSupp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSuppMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSupp);

        jScrollPane2.setBounds(650, 20, 530, 200);
        jDesktopPane1.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        dtPO.setCalendarBackground(new java.awt.Color(255, 153, 153));
        dtPO.setBounds(450, 50, 180, 20);
        jDesktopPane1.add(dtPO, javax.swing.JLayeredPane.DEFAULT_LAYER);

        dtRef.setAutoScroll(false);
        dtRef.setCalendarBackground(new java.awt.Color(255, 153, 153));
        dtRef.setBounds(90, 50, 180, 20);
        jDesktopPane1.add(dtRef, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbTo.setBackground(new java.awt.Color(255, 255, 204));
        cmbTo.setName("cmbTo"); // NOI18N
        cmbTo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbToMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbToMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmbToMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmbToMouseReleased(evt);
            }
        });
        cmbTo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbToItemStateChanged(evt);
            }
        });
        cmbTo.setBounds(90, 80, 180, 20);
        jDesktopPane1.add(cmbTo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbItem.setName("cmbItem"); // NOI18N
        cmbItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemItemStateChanged(evt);
            }
        });
        cmbItem.setBounds(90, 110, 180, 20);
        jDesktopPane1.add(cmbItem, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnADD1.setFont(new java.awt.Font("Times New Roman", 1, 11));
        btnADD1.setForeground(new java.awt.Color(0, 51, 255));
        btnADD1.setText("GENERATE");
        btnADD1.setName("btnADD1"); // NOI18N
        btnADD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADD1ActionPerformed(evt);
            }
        });
        btnADD1.setBounds(50, 610, 120, 30);
        jDesktopPane1.add(btnADD1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel16.setText("Quantity:");
        jLabel16.setName("jLabel16"); // NOI18N
        jLabel16.setBounds(360, 140, 70, 20);
        jDesktopPane1.add(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtUnit.setBackground(new java.awt.Color(255, 255, 204));
        txtUnit.setName("txtUnit"); // NOI18N
        txtUnit.setBounds(450, 80, 180, 20);
        jDesktopPane1.add(txtUnit, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel6.setText("Tax Type:");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setBounds(30, 190, 50, 20);
        jDesktopPane1.add(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rd1.setBackground(new java.awt.Color(255, 51, 51));
        buttonGroup1.add(rd1);
        rd1.setFont(new java.awt.Font("Times New Roman", 1, 12));
        rd1.setForeground(new java.awt.Color(255, 255, 255));
        rd1.setText("SGST/CGST");
        rd1.setName("rd1"); // NOI18N
        rd1.setBounds(90, 200, 95, 23);
        jDesktopPane1.add(rd1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rd2.setBackground(new java.awt.Color(255, 51, 51));
        buttonGroup1.add(rd2);
        rd2.setFont(new java.awt.Font("Times New Roman", 1, 12));
        rd2.setForeground(new java.awt.Color(255, 255, 255));
        rd2.setText("IGST");
        rd2.setName("rd2"); // NOI18N
        rd2.setBounds(180, 200, 60, 23);
        jDesktopPane1.add(rd2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rd3.setBackground(new java.awt.Color(255, 51, 51));
        buttonGroup1.add(rd3);
        rd3.setFont(new java.awt.Font("Times New Roman", 1, 12));
        rd3.setForeground(new java.awt.Color(255, 255, 255));
        rd3.setText("IIGST");
        rd3.setName("rd3"); // NOI18N
        rd3.setBounds(240, 200, 60, 23);
        jDesktopPane1.add(rd3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtDiscount.setBackground(new java.awt.Color(255, 255, 204));
        txtDiscount.setName("txtDiscount"); // NOI18N
        txtDiscount.setBounds(450, 170, 180, 20);
        jDesktopPane1.add(txtDiscount, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel7.setText("Grand Total:");
        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.setBounds(450, 560, 70, 20);
        jDesktopPane1.add(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtTotal.setEditable(false);
        txtTotal.setName("txtTotal"); // NOI18N
        txtTotal.setBounds(520, 560, 120, 20);
        jDesktopPane1.add(txtTotal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel8.setText("Tax:");
        jLabel8.setName("jLabel8"); // NOI18N
        jLabel8.setBounds(30, 160, 50, 20);
        jDesktopPane1.add(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jButton1.setForeground(new java.awt.Color(255, 0, 51));
        jButton1.setText("DELETE");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setBounds(330, 330, 80, 20);
        jDesktopPane1.add(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel9.setText("P.O.No:");
        jLabel9.setName("jLabel9"); // NOI18N
        jLabel9.setBounds(360, 20, 60, 20);
        jDesktopPane1.add(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbTax.setBackground(new java.awt.Color(255, 255, 204));
        cmbTax.setEnabled(false);
        cmbTax.setName("cmbTax"); // NOI18N
        cmbTax.setBounds(90, 170, 180, 20);
        jDesktopPane1.add(cmbTax, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtQty.setBackground(new java.awt.Color(255, 255, 204));
        txtQty.setName("txtQty"); // NOI18N
        txtQty.setBounds(450, 140, 180, 20);
        jDesktopPane1.add(txtQty, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel10.setText("Total Taxl:");
        jLabel10.setName("jLabel10"); // NOI18N
        jLabel10.setBounds(250, 560, 60, 20);
        jDesktopPane1.add(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txttottax.setEditable(false);
        txttottax.setName("txttottax"); // NOI18N
        txttottax.setBounds(310, 560, 120, 20);
        jDesktopPane1.add(txttottax, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel11.setText("Discount:");
        jLabel11.setName("jLabel11"); // NOI18N
        jLabel11.setBounds(60, 560, 60, 20);
        jDesktopPane1.add(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txttotdis.setEditable(false);
        txttotdis.setName("txttotdis"); // NOI18N
        txttotdis.setBounds(120, 560, 120, 20);
        jDesktopPane1.add(txttotdis, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        tblPo1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPo1.setName("tblPo1"); // NOI18N
        tblPo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPo1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPo1);

        jScrollPane3.setBounds(20, 360, 620, 190);
        jDesktopPane1.add(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton2.setText("AMMEND");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.setBounds(470, 610, 100, 30);
        jDesktopPane1.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton3.setText("SEARCH");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.setBounds(370, 610, 90, 30);
        jDesktopPane1.add(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblPenPO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPenPO.setName("tblPenPO"); // NOI18N
        jScrollPane1.setViewportView(tblPenPO);

        jScrollPane1.setBounds(650, 270, 530, 290);
        jDesktopPane1.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("P.O List ");
        jLabel17.setName("jLabel17"); // NOI18N
        jLabel17.setBounds(860, 240, 130, 17);
        jDesktopPane1.add(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtPONo.setBackground(new java.awt.Color(255, 255, 204));
        txtPONo.setEnabled(false);
        txtPONo.setName("txtPONo"); // NOI18N
        txtPONo.setBounds(450, 20, 180, 20);
        jDesktopPane1.add(txtPONo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel18.setText("Packing Cost:");
        jLabel18.setName("jLabel18"); // NOI18N
        jLabel18.setBounds(30, 230, 90, 20);
        jDesktopPane1.add(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dtDeliveryDate.setBounds(450, 200, 180, 20);
        jDesktopPane1.add(dtDeliveryDate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel19.setText("Delivery Date:");
        jLabel19.setName("jLabel19"); // NOI18N
        jLabel19.setBounds(360, 200, 90, 20);
        jDesktopPane1.add(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtPaymentTerms.setName("txtPaymentTerms"); // NOI18N
        txtPaymentTerms.setBounds(450, 230, 180, 20);
        jDesktopPane1.add(txtPaymentTerms, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel20.setText("Payment Terms:");
        jLabel20.setName("jLabel20"); // NOI18N
        jLabel20.setBounds(360, 230, 90, 20);
        jDesktopPane1.add(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtPackingCost.setBackground(new java.awt.Color(255, 255, 204));
        txtPackingCost.setName("txtPackingCost"); // NOI18N
        txtPackingCost.setBounds(110, 230, 160, 20);
        jDesktopPane1.add(txtPackingCost, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel21.setText("Transpotation ");
        jLabel21.setName("jLabel21"); // NOI18N
        jLabel21.setBounds(30, 250, 90, 20);
        jDesktopPane1.add(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel22.setText("Make:");
        jLabel22.setName("jLabel22"); // NOI18N
        jLabel22.setBounds(30, 140, 34, 14);
        jDesktopPane1.add(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbMake.setName("cmbMake"); // NOI18N
        cmbMake.setBounds(90, 140, 180, 20);
        jDesktopPane1.add(cmbMake, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel23.setText("Grr No:");
        jLabel23.setName("jLabel23"); // NOI18N
        jLabel23.setBounds(30, 330, 50, 14);
        jDesktopPane1.add(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtGrrNo.setBackground(new java.awt.Color(255, 255, 204));
        txtGrrNo.setName("txtGrrNo"); // NOI18N
        txtGrrNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrrNoActionPerformed(evt);
            }
        });
        txtGrrNo.setBounds(80, 330, 80, 20);
        jDesktopPane1.add(txtGrrNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1203, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1239)/2, (screenSize.height-710)/2, 1239, 710);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       try{
        btnUPDATE.setEnabled(false);
        btnDELETE.setEnabled(false);
        tblPo1.setModel(model);
        model.addColumn("Sr.No.");        
        model.addColumn("Item Code.");
        model.addColumn("Description");
        model.addColumn("Make");
        model.addColumn("Unit");
        model.addColumn("Tax(%)");
        model.addColumn("Discount %");
        model.addColumn("Dis Amt");
        model.addColumn("Quantity");
        model.addColumn("Rate");       
        model.addColumn("Amount"); 
        model.addColumn("Tax Amt");  
        model.addColumn("Total Amount");  
        
          tblSupp.setModel(model1);
             model1.addColumn("P.O.NO");
             model1.addColumn("GRR.NO");
             model1.addColumn("P.O.Date");
             model1.addColumn("Item Name");
             model1.addColumn("Qty");
             model1.addColumn("Price");
             model1.addColumn("Pending");
       // model.addColumn("Delivery Period");
               
             //Pending P.O
               tblPenPO.setModel(model2);
               
           model2.addColumn("PO.No.");
            model2.addColumn("GRR.No.");
        model2.addColumn("Item Name");
        model2.addColumn("UOM");
        model2.addColumn("Qty");
        model2.addColumn("Rate");
        model2.addColumn("Amount");
        model2.addColumn("Tax");
        model2.addColumn("Pending Qty");       

        
//       con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//       Statement st=con.createStatement();
              st=db.dbConn();
              
           
              
        cmbTo.addItem("--Select Supplier Name--");
         //cmbUnit.addItem("--Select Unit--");
         cmbItem.addItem("--Select Item Name--");
       ResultSet rss=st.executeQuery("select name from tblSupplier");
        
        while(rss.next())
        {
                cmbTo.addItem(rss.getString("name"));
        }
        
        rss.close();
        
         cmbMake.addItem("--Select Make--");
        rss=st.executeQuery("select distinct(make) from tblmake");
        
        while(rss.next())
        {
                cmbMake.addItem(rss.getString("make"));
        }
        
        rss.close();
        
         rss=st.executeQuery("select distinct(itemname) from tblitem");
          
        while(rss.next())
        {
                cmbItem.addItem(rss.getString("itemname"));
        }
        rss.close();
        
        rss=st.executeQuery("select max(pono) from tblpurchaseorder");
           String pono;
        while(rss.next())
        {
         int po=rss.getInt(1);       
        //System.out.print(po);
        
        if( po == 0 || po < 0  )
        {
             po=1;
            pono=String.valueOf(po);
           txtPONo.setText(pono);
           
            System.out.print(po);
        }
        else
        {
            po=rss.getInt(1);
             po+=1;
              pono=String.valueOf(po);
           txtPONo.setText(pono);
          //System.out.print(po);
        }
        }
        rss.close();
        
         rss=st.executeQuery("select max(grrno) from tblpurchaseorder");
           String grrno;
        while(rss.next())
        {
         int gr=rss.getInt(1);       
        //System.out.print(po);
        
        if( gr == 0 || gr < 0  )
        {
             gr=1;
            grrno=String.valueOf(gr);
           txtGrrNo.setText(grrno);
           
            System.out.print(gr);
        }
        else
        {
            gr=rss.getInt(1);
             gr+=1;
              grrno=String.valueOf(gr);
           txtGrrNo.setText(grrno);
          //System.out.print(po);
        }
        }
        rss.close();
        
        
        //Pending P.O List
        
          
                 
                     // con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//            st=con.createStatement();
            int i=0;
            int j=1;
             //System.out.println(cmbTo.getSelectedItem());
         
                 
      
        display();
       }
               
               
       catch(Exception e){
           System.out.print(e);
       }
        
    }//GEN-LAST:event_formWindowOpened

    private void btnADDMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDMaterialActionPerformed
        try {
       
            st=db.dbConn();
            
              if (txtRefNo.getText().trim().length()==0)
             {
                     JOptionPane.showMessageDialog(null,"Enter Reference Number.");
                     return;  
             }
              
              if (txtRefNo.getText().trim().length()==0)
             {
                     JOptionPane.showMessageDialog(null,"Enter P.O Number.");
                     return;  
             }
              
              if (dtPO.getText().trim().length()==0 || dtRef.getText().trim().length()==0 )
             {
                     JOptionPane.showMessageDialog(null,"Select Ref/P.O Date");
                     return;  
             }
              
             if (cmbItem.getSelectedItem().equals("--Select Item Name--") )
             {
                     JOptionPane.showMessageDialog(null,"Select Item Name");
                     return;  
             }
             
              if (cmbTo.getSelectedItem().equals("--Select Supplier Name--") )
             {
                     JOptionPane.showMessageDialog(null,"Select Supplier Name");
                     return;  
             }
               if (cmbTo.getSelectedItem().equals("--Select Make--") )
             {
                     JOptionPane.showMessageDialog(null,"Select Make");
                     return;  
             }
              
 //               if (cmbUnit.equals("--Select Unit--") )
 //            {
 //                    JOptionPane.showMessageDialog(null,"Select Unit");
 //                    return;  
 //            }
             
              if (txtUnit.getText().trim().length()==0 )
             {
                     JOptionPane.showMessageDialog(null,"Enter Quantity.");
                     return;  
             } 
              
             
              if (txtRate.getText().trim().length()==0)
             {
                     JOptionPane.showMessageDialog(null,"Enter Rate.");
                     return;  
             } 
              
              if (rd1.isSelected()==false && rd2.isSelected()==false && rd3.isSelected()==false)
             {
                     JOptionPane.showMessageDialog(null,"Select Tax Type");
                     return;  
             }
              
              if(txtDiscount.getText().equals("")){
                  txtDiscount.setText("0");
              }
             
               tblSupp.setModel(model);
               String desc="";
               String item=cmbItem.getSelectedItem().toString();
               String unit=txtUnit.getText().toString();
               String tax=cmbTax.getText();
               String qty=txtQty.getText();
               String rate=txtRate.getText();
               String d=txtDiscount.getText();
             
               if(price!=Double.parseDouble(rate)){
                   int i=JOptionPane.showConfirmDialog(rootPane, "Do You Want to Update Item Price");
                  if(i==0){
                      Statement st1=db.dbConn();
                      st1.executeUpdate("update tblitem set rate="+txtRate.getText()+" where itemname='"+cmbItem.getSelectedItem()+"'");
                  }
                   //st.executeUpdate(d);
               }
               
 
              double amount=Integer.parseInt(qty)*Double.parseDouble(rate);
              double dis=(Double.parseDouble(d)*amount)/100;
              amount=amount-dis;
              taxAmt =(amount*Double.parseDouble(tax))/100;
              totalAmount=amount+taxAmt;
              
              ResultSet rs=st.executeQuery("select description from tblitem where itemname='"+cmbItem.getSelectedItem()+"'");
             if(rs.next()){
                 desc=item;//+" "+rs.getString("description");           
             }        
               i=model.getRowCount();
                if(i<0 )
                {
                    i=1;
                }
                else
                {
                    i =i+1;
                }
                int ordlvl=0;
                rs=st.executeQuery("select max_order_level from tblitem where itemname='"+cmbItem.getSelectedItem()+"'");
                if(rs.next()){
                    ordlvl=rs.getInt(1);
                }
                rs.close();
                
                String item_code="";
                rs=st.executeQuery("select grrno from tblitem where itemname='"+cmbItem.getSelectedItem()+"'");
                if(rs.next()){
                   item_code=rs.getString(1);
                }
                rs.close();
            
                 int quant=Integer.parseInt(qty);
                if(quant > ordlvl ){
                    JOptionPane.showMessageDialog(rootPane, "Your Order Quantity is greater than Order level");
                }
                else{
                    int q=0;
                     for(int j=0;j<tblPo1.getRowCount();j++){
                         String s=(String) model.getValueAt(j, 1);
                         String make=model.getValueAt(j, 3).toString();
                         String slno=model.getValueAt(j, 0).toString(); 
                         //i=j;
                        // JOptionPane.showMessageDialog(rootPane, s);
                        if(item_code.equals(s) && make.equals(make)){
                            //unit +=unit;
                            //tax +=tax;
                            
                            d +=d;
                            q=Integer.parseInt(qty);
                            q +=q;
                            qty=String.valueOf(q);
                            //rate +=rate;
                            amount +=amount;
                            taxAmt +=taxAmt;
                            totalAmount +=totalAmount;
                            model.removeRow(j);
                            i=Integer.parseInt(slno);
                        }
                     }
                     
                 model.addRow(new Object[]{i,item_code,desc,cmbMake.getSelectedItem(),unit,tax,d,dis,qty,rate,amount,taxAmt,totalAmount});
                 
                 double tot=0,totdis=0,tottax=0;
                 
                 for (i = 0; i < model.getRowCount(); i++){
                     totdis +=Double.parseDouble(model.getValueAt(i, 6).toString());
                     tottax +=Double.parseDouble(model.getValueAt(i, 11).toString());
                     tot += Double.parseDouble(model.getValueAt(i, 12).toString());                                                     
                }
                
                 String total=String.valueOf(tot);
                 txtTotal.setText(total);
                 txttotdis.setText(String.valueOf(totdis));
                 txttottax.setText(String.valueOf(tottax));
                 
                 txtRate.setText("");
                 txtQty.setText("");
                 txtDiscount.setText("");
                 txtUnit.setText("");
                 cmbItem.requestFocus();
                 
                       }
               
        } catch (SQLException ex) {
            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        }                
               
    }//GEN-LAST:event_btnADDMaterialActionPerformed

    private void tblSuppMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSuppMouseClicked

    }//GEN-LAST:event_tblSuppMouseClicked

    private void btnUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPDATEActionPerformed
        try{
//           con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//          Statement st=con.createStatement();
//          
//          int i=st.executeUpdate("update tblsupplier set code='"+txtCode.getText()+"', name='"+txtName.getText()+"', ph='"+txtPhone.getText()+"', mob="+txtMobile.getText()+" "
//                  + ", email='"+txtEmail.getText()+"', fax='"+txtFax.getText()+"', pan="+txtPAN.getText()+" "
//                  + ", exnum="+txtExcise.getText()+", gstno='"+txtGST.getText()+"', address='"+txtAddr.getText()+"' city='"+txtCity.getText()+"'"
//                  + ", state='"+txtState.getText()+"', pin='"+txtPin.getText()+"', country='"+txtCountry.getText()+"' bank_name='"+txtBank.getText()+"'"
//                  + ", bank_branch='"+txtBranch.getText()+"', bank_city='"+txtBankCity.getText()+"' acc_num='"+txtAcc.getText()+"', ifsc_code='"+txtIFSC.getText()+"'   where id="+txtID.getText()+"");
//          if(i>0){
//              JOptionPane.showMessageDialog(rootPane, "Supplier Details Updated Successfully");
//              display();
//          }
//          else
//          {
//                JOptionPane.showMessageDialog(rootPane, "Error in Updation");
//          }
       }
       catch(Exception e){
           System.out.print(e);
       }
    }//GEN-LAST:event_btnUPDATEActionPerformed

    private void btnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELETEActionPerformed
        try{
          
           Statement st=db.dbConn();
           Statement st1=db.dbConn();
          int i= st.executeUpdate("Delete from tblpurchaseorder where pono="+txtPONo.getText()+"");
          int j= st1.executeUpdate("Delete from tblpurchaseorderdetails where pono="+txtPONo.getText()+"");
          
               int dialogButton = JOptionPane.YES_NO_OPTION;
               int dialogResult = JOptionPane.showConfirmDialog (null, "Would You Like to Delete?","Warning",dialogButton);
               System.out.println(dialogResult);
                if(dialogResult == 0){
                    if(i>0 && j>0){
                   JOptionPane.showMessageDialog(rootPane, "Deleted Successfully");
                   //display();
                }
                   else
                {
                   JOptionPane.showMessageDialog(rootPane, "Error in Deletion");
                }
                }
                else if(dialogResult == JOptionPane.NO_OPTION)
                {
                    
                   
                }
              
        }
        catch(Exception e){
            System.out.print(e);
        }
          
    }//GEN-LAST:event_btnDELETEActionPerformed

    private void btnADD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADD1ActionPerformed
        try {
            st=db.dbConn();
            String taxtype="";
            
            if(rd1.isSelected()==true){
                taxtype="SGST/CGST";
            }else if(rd2.isSelected()==true){
                taxtype="IGST";
            }else{
                taxtype="IIGST";
            }
            
              String datePattern = "yyyy-M-dd";
                 SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);
              dtRef.setDateFormat(dateFormatter);
              dtPO.setDateFormat(dateFormatter);
              dtDeliveryDate.setDateFormat(dateFormatter);
            //con.setAutoCommit(false);
            i=st.executeUpdate("insert into tblpurchaseorder(pono,refno,refdate,podate,name,totaldis,totaltax,taxtype,gt,delv_date,pack_cost,transp_cost,payment_terms,grrno) values("+ txtPONo.getText() +",'"+ txtRefNo.getText() +"','"+ dtRef.getText() +"','"+ dtPO.getText() +"','"+ cmbTo.getSelectedItem() +"',"+ txttotdis.getText() +","+ txttottax.getText() +",'"+ taxtype +"',"+ txtTotal.getText() +",'"+dtDeliveryDate.getText()+"','"+txtPackingCost.getText()+"','"+txtTranpotation.getText()+"','"+txtPaymentTerms.getText()+"',"+txtGrrNo.getText()+")");
            for(i = 0; i < model.getRowCount(); i++){
                  st.executeUpdate("insert into tblpurchaseorderdetails values("+ txtPONo.getText() +",'"+ tblSupp.getValueAt(i, 1) +"','"+ tblSupp.getValueAt(i, 2) +"','"+ tblSupp.getValueAt(i, 4) +"',"+ tblSupp.getValueAt(i, 8) +","+ tblSupp.getValueAt(i, 9) +","+ tblSupp.getValueAt(i, 12) +","+ tblSupp.getValueAt(i, 5) +","+ tblSupp.getValueAt(i, 11) +", "+ tblSupp.getValueAt(i, 6) +","+ tblSupp.getValueAt(i, 8) +",'"+ tblSupp.getValueAt(i, 3) +"',"+txtGrrNo.getText()+")");
                }
            if(i>0){
                JOptionPane.showMessageDialog(rootPane, "Purchase Order Generated successfully");
//              for (int j = i; j < model.getRowCount(); j--){
//                model.removeRow(j);
//            }
            }
            //con.commit();
            String type="";
            ResultSet rs=st.executeQuery("select taxtype from tblpurchaseorder where pono='"+txtPONo.getText()+"'");
            if(rs.next()){
                type=rs.getString(1);
            }
            if(type.equals("SGST/CGST")){
              String path = new java.io.File(".").getCanonicalPath();
           String rpt=path+"\\Reports\\rptPONew.jrxml";
             jasperReportIA ii=new jasperReportIA(rpt,"","","",txtPONo.getText(),"","","");
            }
            else if(type.equals("IGST")){
                 String path = new java.io.File(".").getCanonicalPath();
           String rpt=path+"\\Reports\\rptPONewIGST.jrxml";
            jasperReportIA ii=new jasperReportIA(rpt,"","","",txtPONo.getText(),"","","");
            }
            else
            {
                String path = new java.io.File(".").getCanonicalPath();
           String rpt=path+"\\Reports\\rptPONewIGST.jrxml";
            jasperReportIA ii=new jasperReportIA(rpt,"","","",txtPONo.getText(),"","","");
            }
            int i=model.getRowCount();
           for( int j = model.getRowCount()-1 ; j >= 0; j-- )
                {
                model.removeRow(j);
                }
           txtTotal.setText("");
           txttotdis.setText("");
           txttottax.setText("");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
     
       
               
    }//GEN-LAST:event_btnADD1ActionPerformed

    private void cmbItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemItemStateChanged
       try{
           st=db.dbConn();
           ResultSet rs=st.executeQuery("select rate,uom,tax from tblitem where itemname='"+cmbItem.getSelectedItem()+"'");
           if(rs.next()){
               txtRate.setText(rs.getString("rate"));
               txtUnit.setText(rs.getString("uom"));
               cmbTax.setText(rs.getString("tax"));
               price=Double.parseDouble(rs.getString("rate"));
           }
             rs=st.executeQuery("select * from tblpurchaseorderdetails where itemname='"+cmbItem.getSelectedItem()+"' and pendqty > 0");
           
             while(rs.next()){
             //System.out.println(j);
             model2.addRow(new Object[]{rs.getString("pono"),rs.getString("grrno"),rs.getString("itemname"),rs.getString("uom"),rs.getString("qty"),rs.getString("rate"),rs.getString("amount"),rs.getString("taxrate"),rs.getString("pendqty")});
             //j=j+1;
          }
       }
       catch(Exception e){
           System.out.print(e);
       }
    }//GEN-LAST:event_cmbItemItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      try{
        st=db.dbConn();
      
        int i=tblPo1.getSelectedRow();
        int k=JOptionPane.showConfirmDialog(rootPane, "Do you want to Delete Record");
        //JOptionPane.showMessageDialog(rootPane, k);
        if(k==0){
      //JOptionPane.showMessageDialog(rootPane, i);
      for(int j=0;j<model.getRowCount();j++){
          model.removeRow(j);
         //st.executeUpdate("delete from tblpurchaseorderdetails where item_code='"+tblPo1.getValueAt(j, 1)+"' and pono="+txtPONo.getText()+"");
      }
      JOptionPane.showMessageDialog(rootPane, "Deleted Successfully");
     // display();
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Error in Deletion");
        }
      }
      catch(Exception e){
          System.out.println(e);
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblPo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPo1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPo1MouseClicked

    private void cmbToItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbToItemStateChanged
        try {
            
           st=db.dbConn();
            int i=0;
            int j=1;
             System.out.println(cmbTo.getSelectedItem());
            ResultSet rs=st.executeQuery("select * from tblpurchaseorder where name='"+cmbTo.getSelectedItem()+"'");
           
             if(rs.next())
         {
             while(model1.getRowCount()>0){
             for(int ii=0;ii<model1.getRowCount();ii++){
                 model1.removeRow(ii);
                 
             }
             }
             i=rs.getInt("pono");
             String dt=rs.getString("podate");
             ResultSet rs1=st.executeQuery("select * from tblpurchaseorderdetails where pono="+i+"");
             
             while(rs1.next()){
             System.out.println(j);
           
             model1.addRow(new Object[]{rs1.getString("pono"),rs1.getString("grrno"),dt,rs1.getString("itemname"),rs1.getString("qty"),rs1.getString("amount")});
             j=j+1;
         }
         }
        } catch (SQLException ex) {
            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_cmbToItemStateChanged

    private void cmbToMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbToMouseClicked
//try {
//            con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//            st=con.createStatement();
//            int i=0;
//            //int j=1;
//             System.out.println(cmbTo.getSelectedItem());
//            ResultSet rs=st.executeQuery("select * from tblpurchaseorder where name='"+cmbTo.getSelectedItem()+"'");
//           
//             if(rs.next())
//         {
//             i=rs.getInt("pono");
//             String dt=rs.getString("podate");
//             ResultSet rs1=st.executeQuery("select * from tblpurchaseorderdetails where pono="+i+"");
//             
//             while(rs1.next()){
//             //System.out.println(j);
//             model1.addRow(new Object[]{rs1.getString("pono"),dt,rs1.getString("itemname"),rs1.getString("qty"),rs1.getString("amount")});
//            // j=j+1;
//         }
//         }
//        } catch (SQLException ex) {
//            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_cmbToMouseClicked

    private void cmbToMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbToMouseReleased
//        try {
//            con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//            st=con.createStatement();
//            int i=0;
//            //int j=1;
//             System.out.println(cmbTo.getSelectedItem());
//            ResultSet rs=st.executeQuery("select * from tblpurchaseorder where name='"+cmbTo.getSelectedItem()+"'");
//           
//             if(rs.next())
//         {
//             i=rs.getInt("pono");
//             String dt=rs.getString("podate");
//             ResultSet rs1=st.executeQuery("select * from tblpurchaseorderdetails where pono="+i+"");
//             
//             while(rs1.next()){
//             //System.out.println(j);
//             model1.addRow(new Object[]{rs1.getString("pono"),dt,rs1.getString("itemname"),rs1.getString("qty"),rs1.getString("amount")});
//            // j=j+1;
//         }
//         }
//        } catch (SQLException ex) {
//            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_cmbToMouseReleased

    private void cmbToMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbToMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbToMousePressed

    private void cmbToMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbToMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbToMouseEntered

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            txtGrrNo.setText("");
            String po=JOptionPane.showInputDialog("Enter P.O Number/GRR NO");
            txtPONo.setText(po);
             while(model.getRowCount()>0){
                 for(int ii=0;ii<model.getRowCount();ii++){
                     model.removeRow(ii);
                     
                 }
             }
             
             st=db.dbConn();
             
             ResultSet rs=st.executeQuery("select * from tblpurchaseorder where pono="+po+" or grrno="+po+"");
             if(rs.next()){
                 
                 cmbTax.setText(po);
                 txtRefNo.setText(rs.getString("refno"));
                 String dtref=rs.getString("refdate");
                 dtRef.setText(rs.getString("refdate"));                  
                 dtPO.setText(rs.getString("podate"));                 
                 cmbTo.setSelectedItem(rs.getString("name"));
                 txtDiscount.setText(rs.getString("totaldis"));
                 txttottax.setText(rs.getString("totaltax"));
                 
                 String tax=rs.getString("taxtype");
                 if(tax.equals("SGST"))
                 {
                     rd1.setSelected(true);
                 }
                 else if(tax.equals("IGST")){
                     rd2.setSelected(true);
                 }
                 else
                 {
                     rd3.setSelected(true);
                 }
                 txtTotal.setText(rs.getString("gt"));
                 
                 rs=st.executeQuery("select * from tblpurchaseorderdetails where pono="+po+" or grrno="+po+"");
                 int sl=1;
                 while(rs.next()){
                      String itemcode=rs.getString("item_code");
                     String item=rs.getString("itemname");
                     String uom=rs.getString("uom");
                     int qty=rs.getInt("qty");
                     double rate=rs.getDouble("rate");
                     double amt=rs.getDouble("amount");
                     double tax1=rs.getDouble("taxrate");
                     double taxamt=rs.getDouble("taxamt");
                     double disper=rs.getDouble("disper");
                     String make=rs.getString("make");
                     String grr=rs.getString("grrno");
                     double disamt=0,amount=0;
                     
                     if(disper > 0){
                         disamt=((rate*qty)*disper)/100;
                          }
                     
                   amount=amt-disamt;
                   txtGrrNo.setText(grr);
                   
                   model.addRow(new Object[]{sl,itemcode,item,make,uom,tax1,disper,disamt,qty,rate,amount,taxamt,amt});
                   sl +=1;
                 }
                 
             }
             else
             {
                 JOptionPane.showMessageDialog(rootPane, "Invalid P.O Number");
             }
             btnDELETE.setEnabled(true);
             btnUPDATE.setEnabled(true);
        } catch (SQLException ex) {
            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            st=db.dbConn();
            
            int i=st.executeUpdate("delete from tblpurchaseorder  where pono="+txtPONo.getText()+"");
            int j=st.executeUpdate("delete from tblpurchaseorderdetails  where pono="+txtPONo.getText()+"");
            
            
                    
            String taxtype="";
            
            if(rd1.isSelected()==true){
                taxtype="SGST";
            }else if(rd2.isSelected()==true){
                taxtype="IGST";
            }else{
                taxtype="IIGST";
            }
           // con.setAutoCommit(false);
           
           i=st.executeUpdate("insert into tblpurchaseorder(pono,refno,refdate,podate,name,totaldis,totaltax,taxtype,gt,delv_date,pack_cost,transp_cost,payment_terms,grrno) values("+ txtPONo.getText() +",'"+ txtRefNo.getText() +"','"+ dtRef.getText() +"','"+ dtPO.getText() +"','"+ cmbTo.getSelectedItem() +"',"+ txttotdis.getText() +","+ txttottax.getText() +",'"+ taxtype +"',"+ txtTotal.getText() +",'"+dtDeliveryDate.getText()+"','"+txtPackingCost.getText()+"','"+txtTranpotation.getText()+"','"+txtPaymentTerms.getText()+"',"+txtGrrNo.getText()+")");
            for(i = 0; i < model.getRowCount(); i++){
                   st.executeUpdate("insert into tblpurchaseorderdetails values("+ txtPONo.getText() +",'"+ tblSupp.getValueAt(i, 1) +"','"+ tblSupp.getValueAt(i, 2) +"','"+ tblSupp.getValueAt(i, 4) +"',"+ tblSupp.getValueAt(i, 8) +","+ tblSupp.getValueAt(i, 9) +","+ tblSupp.getValueAt(i, 12) +","+ tblSupp.getValueAt(i, 5) +","+ tblSupp.getValueAt(i, 11) +", "+ tblSupp.getValueAt(i, 6) +","+ tblSupp.getValueAt(i, 8) +",'"+ tblSupp.getValueAt(i, 3) +"',"+txtGrrNo.getText()+")");
                }
            if(i>0){
                JOptionPane.showMessageDialog(rootPane, "Purchase Order Updated successfully");
//              for (int j = i; j < model.getRowCount(); j--){
//                model.removeRow(j);
//            }
            }
           // con.commit();
            
        } catch (SQLException ex) {
            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtRefNoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRefNoMouseExited
        try {
            st=db.dbConn();
            
           ResultSet rs=st.executeQuery("select * from tblpurchaseorder where refno='"+txtRefNo.getText()+"'");
           if(rs.next()){
               JOptionPane.showMessageDialog(rootPane, "Reference Number is all ready present");
           }
        } catch (SQLException ex) {
            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtRefNoMouseExited

    private void txtRateInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtRateInputMethodTextChanged
  
    }//GEN-LAST:event_txtRateInputMethodTextChanged

    private void txtRateCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtRateCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRateCaretUpdate

    private void txtRateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtRateCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRateCaretPositionChanged

    private void txtGrrNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrrNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGrrNoActionPerformed

    public void display()
     {
         try{
//             model.setRowCount(0);
//             con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//             Statement st=con.createStatement();
//             ResultSet rs=st.executeQuery("select * from tblsupplier");
//        while(rs.next())
//        {
//            model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(5),rs.getString(6),rs.getString(8),rs.getString(10),rs.getString(16),rs.getString(19),rs.getString(20)});
//        }
         }
         catch(Exception e){
             System.out.print(e);
         }
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frmPurchaseOrder().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD1;
    private javax.swing.JButton btnADDMaterial;
    private javax.swing.JButton btnDELETE;
    private javax.swing.JButton btnUPDATE;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbItem;
    private javax.swing.JComboBox cmbMake;
    private javax.swing.JTextField cmbTax;
    private javax.swing.JComboBox cmbTo;
    private datechooser.beans.DateChooserCombo dtDeliveryDate;
    private datechooser.beans.DateChooserCombo dtPO;
    private datechooser.beans.DateChooserCombo dtRef;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton rd1;
    private javax.swing.JRadioButton rd2;
    private javax.swing.JRadioButton rd3;
    private javax.swing.JTable tblPenPO;
    private javax.swing.JTable tblPo1;
    private javax.swing.JTable tblSupp;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtGrrNo;
    private javax.swing.JTextField txtPONo;
    private javax.swing.JTextField txtPackingCost;
    private javax.swing.JTextField txtPaymentTerms;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtRate;
    private javax.swing.JTextField txtRefNo;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTranpotation;
    private javax.swing.JTextField txtUnit;
    private javax.swing.JTextField txttotdis;
    private javax.swing.JTextField txttottax;
    // End of variables declaration//GEN-END:variables
}
