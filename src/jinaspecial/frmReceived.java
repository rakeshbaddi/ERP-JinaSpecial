/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmDeaprtment.java
 *
 * Created on 27 Nov, 2017, 2:26:35 PM
 */
package jinaspecial;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.util.Date;
/**
 *
 * @author Vaibhav
 */
public class frmReceived extends javax.swing.JFrame {

     dbConn mc=new dbConn();
     dbConnection db=new dbConnection();
     Connection con;
     Statement st;
     ResultSet rs;
 DefaultTableModel model=new DefaultTableModel();
 DefaultTableModel model1=new DefaultTableModel();
  int i=model.getRowCount();
  
   long millis=System.currentTimeMillis();  
        java.sql.Date date=new java.sql.Date(millis);  
  
             
  double taxAmt,totalAmount;
    /** Creates new form frmDeaprtment */
    public frmReceived() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDeliveryPeriod = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtInvNo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtRate = new javax.swing.JTextField();
        btnADDMaterial = new javax.swing.JButton();
        btnUPDATE = new javax.swing.JButton();
        btnDELETE = new javax.swing.JButton();
        dtPO = new datechooser.beans.DateChooserCombo();
        dtInv = new datechooser.beans.DateChooserCombo();
        cmbTo = new javax.swing.JComboBox();
        cmbItem = new javax.swing.JComboBox();
        btnADD1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtUnit = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rd1 = new javax.swing.JRadioButton();
        rd2 = new javax.swing.JRadioButton();
        rd3 = new javax.swing.JRadioButton();
        txtDiscount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cmbTax = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txttottax = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txttotdis = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPo1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtitemname = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        txtDcNo = new javax.swing.JTextField();
        txtUnitt1 = new javax.swing.JTextField();
        txtord1 = new javax.swing.JTextField();
        txtprevrec = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtrcvd2 = new javax.swing.JTextField();
        txtPONo1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtpen1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtRejectedQty = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtGrrNo = new javax.swing.JTextField();

        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.setName("jPasswordField1"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Material Received");
        setIconImages(null);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(240, 240, 240));
        jDesktopPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jDesktopPane1.setMaximumSize(new java.awt.Dimension(1147483647, 2147483647));
        jDesktopPane1.setName("jDesktopPane1"); // NOI18N
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(80, 100));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel1.setText("Invoice No:");
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.setBounds(10, 20, 80, 20);
        jDesktopPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel2.setText("Invoice Date:");
        jLabel2.setName("jLabel2"); // NOI18N
        jLabel2.setBounds(10, 50, 80, 20);
        jDesktopPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel3.setText("To:");
        jLabel3.setName("jLabel3"); // NOI18N
        jLabel3.setBounds(10, 80, 40, 20);
        jDesktopPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel4.setText("Item:");
        jLabel4.setName("jLabel4"); // NOI18N
        jLabel4.setBounds(10, 110, 50, 20);
        jDesktopPane1.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel5.setText("Delivery Period:");
        jLabel5.setName("jLabel5"); // NOI18N
        jLabel5.setBounds(360, 200, 90, 20);
        jDesktopPane1.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtDeliveryPeriod.setBackground(new java.awt.Color(255, 255, 204));
        txtDeliveryPeriod.setName("txtDeliveryPeriod"); // NOI18N
        txtDeliveryPeriod.setBounds(450, 200, 180, 20);
        jDesktopPane1.add(txtDeliveryPeriod, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel12.setText("Discount:");
        jLabel12.setName("jLabel12"); // NOI18N
        jLabel12.setBounds(360, 170, 50, 20);
        jDesktopPane1.add(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtInvNo.setBackground(new java.awt.Color(255, 255, 204));
        txtInvNo.setName("txtInvNo"); // NOI18N
        txtInvNo.setBounds(90, 20, 180, 20);
        jDesktopPane1.add(txtInvNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel13.setText("P.O.Date:");
        jLabel13.setName("jLabel13"); // NOI18N
        jLabel13.setBounds(360, 50, 60, 20);
        jDesktopPane1.add(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel14.setText("Unit:");
        jLabel14.setName("jLabel14"); // NOI18N
        jLabel14.setBounds(360, 80, 70, 20);
        jDesktopPane1.add(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel15.setText("Rate:");
        jLabel15.setName("jLabel15"); // NOI18N
        jLabel15.setBounds(360, 110, 70, 20);
        jDesktopPane1.add(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtRate.setBackground(new java.awt.Color(255, 255, 204));
        txtRate.setName("txtRate"); // NOI18N
        txtRate.setBounds(450, 110, 180, 20);
        jDesktopPane1.add(txtRate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnADDMaterial.setFont(new java.awt.Font("Times New Roman", 1, 11));
        btnADDMaterial.setForeground(new java.awt.Color(0, 51, 255));
        btnADDMaterial.setText("ADD");
        btnADDMaterial.setName("btnADDMaterial"); // NOI18N
        btnADDMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDMaterialActionPerformed(evt);
            }
        });
        btnADDMaterial.setBounds(230, 240, 80, 21);
        jDesktopPane1.add(btnADDMaterial, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnUPDATE.setFont(new java.awt.Font("Times New Roman", 1, 11));
        btnUPDATE.setForeground(new java.awt.Color(51, 0, 255));
        btnUPDATE.setText("UPDATE");
        btnUPDATE.setName("btnUPDATE"); // NOI18N
        btnUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPDATEActionPerformed(evt);
            }
        });
        btnUPDATE.setBounds(170, 540, 80, 30);
        jDesktopPane1.add(btnUPDATE, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnDELETE.setFont(new java.awt.Font("Times New Roman", 1, 11));
        btnDELETE.setForeground(new java.awt.Color(255, 51, 51));
        btnDELETE.setText("DELETE");
        btnDELETE.setName("btnDELETE"); // NOI18N
        btnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELETEActionPerformed(evt);
            }
        });
        btnDELETE.setBounds(260, 540, 90, 30);
        jDesktopPane1.add(btnDELETE, javax.swing.JLayeredPane.DEFAULT_LAYER);

        dtPO.setCalendarBackground(new java.awt.Color(255, 153, 153));
        dtPO.setBounds(450, 50, 180, 20);
        jDesktopPane1.add(dtPO, javax.swing.JLayeredPane.DEFAULT_LAYER);

        dtInv.setAutoScroll(false);
        dtInv.setCalendarBackground(new java.awt.Color(255, 153, 153));
        dtInv.setBounds(90, 50, 180, 20);
        jDesktopPane1.add(dtInv, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbTo.setBackground(new java.awt.Color(255, 255, 204));
        cmbTo.setName("cmbTo"); // NOI18N
        cmbTo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbToMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbToMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmbToMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmbToMouseReleased(evt);
            }
        });
        cmbTo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbToItemStateChanged(evt);
            }
        });
        cmbTo.setBounds(90, 80, 180, 20);
        jDesktopPane1.add(cmbTo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbItem.setName("cmbItem"); // NOI18N
        cmbItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemItemStateChanged(evt);
            }
        });
        cmbItem.setBounds(90, 110, 180, 20);
        jDesktopPane1.add(cmbItem, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnADD1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnADD1.setForeground(new java.awt.Color(0, 51, 255));
        btnADD1.setText("GENERATE");
        btnADD1.setName("btnADD1"); // NOI18N
        btnADD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADD1ActionPerformed(evt);
            }
        });
        btnADD1.setBounds(50, 540, 110, 30);
        jDesktopPane1.add(btnADD1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel16.setText("Quantity:");
        jLabel16.setName("jLabel16"); // NOI18N
        jLabel16.setBounds(360, 140, 70, 20);
        jDesktopPane1.add(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtUnit.setBackground(new java.awt.Color(255, 255, 204));
        txtUnit.setName("txtUnit"); // NOI18N
        txtUnit.setBounds(450, 80, 180, 20);
        jDesktopPane1.add(txtUnit, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel6.setText("Tax Type:");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setBounds(10, 170, 50, 20);
        jDesktopPane1.add(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rd1.setBackground(new java.awt.Color(255, 51, 51));
        buttonGroup1.add(rd1);
        rd1.setFont(new java.awt.Font("Times New Roman", 1, 12));
        rd1.setForeground(new java.awt.Color(255, 255, 255));
        rd1.setText("SGST/CGST");
        rd1.setName("rd1"); // NOI18N
        rd1.setBounds(70, 170, 95, 23);
        jDesktopPane1.add(rd1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rd2.setBackground(new java.awt.Color(255, 51, 51));
        buttonGroup1.add(rd2);
        rd2.setFont(new java.awt.Font("Times New Roman", 1, 12));
        rd2.setForeground(new java.awt.Color(255, 255, 255));
        rd2.setText("IGST");
        rd2.setName("rd2"); // NOI18N
        rd2.setBounds(160, 170, 60, 23);
        jDesktopPane1.add(rd2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rd3.setBackground(new java.awt.Color(255, 51, 51));
        buttonGroup1.add(rd3);
        rd3.setFont(new java.awt.Font("Times New Roman", 1, 12));
        rd3.setForeground(new java.awt.Color(255, 255, 255));
        rd3.setText("IIGST");
        rd3.setName("rd3"); // NOI18N
        rd3.setBounds(220, 170, 59, 23);
        jDesktopPane1.add(rd3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtDiscount.setBackground(new java.awt.Color(255, 255, 204));
        txtDiscount.setName("txtDiscount"); // NOI18N
        txtDiscount.setBounds(450, 170, 180, 20);
        jDesktopPane1.add(txtDiscount, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel7.setText("Grand Total:");
        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.setBounds(770, 490, 70, 20);
        jDesktopPane1.add(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtTotal.setEditable(false);
        txtTotal.setName("txtTotal"); // NOI18N
        txtTotal.setBounds(840, 490, 120, 20);
        jDesktopPane1.add(txtTotal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jLabel8.setText("Tax:");
        jLabel8.setName("jLabel8"); // NOI18N
        jLabel8.setBounds(10, 140, 50, 20);
        jDesktopPane1.add(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 11));
        jButton1.setForeground(new java.awt.Color(255, 0, 51));
        jButton1.setText("DELETE");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setBounds(320, 240, 80, 20);
        jDesktopPane1.add(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel9.setText("P.O.No:");
        jLabel9.setName("jLabel9"); // NOI18N
        jLabel9.setBounds(360, 20, 60, 20);
        jDesktopPane1.add(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmbTax.setBackground(new java.awt.Color(255, 255, 204));
        cmbTax.setEnabled(false);
        cmbTax.setName("cmbTax"); // NOI18N
        cmbTax.setBounds(90, 140, 180, 20);
        jDesktopPane1.add(cmbTax, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtQty.setBackground(new java.awt.Color(255, 255, 204));
        txtQty.setName("txtQty"); // NOI18N
        txtQty.setBounds(450, 140, 180, 20);
        jDesktopPane1.add(txtQty, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel10.setText("Total Taxl:");
        jLabel10.setName("jLabel10"); // NOI18N
        jLabel10.setBounds(580, 490, 60, 20);
        jDesktopPane1.add(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txttottax.setEditable(false);
        txttottax.setName("txttottax"); // NOI18N
        txttottax.setBounds(640, 490, 120, 20);
        jDesktopPane1.add(txttottax, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel11.setText("Discount:");
        jLabel11.setName("jLabel11"); // NOI18N
        jLabel11.setBounds(390, 490, 60, 20);
        jDesktopPane1.add(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txttotdis.setEditable(false);
        txttotdis.setName("txttotdis"); // NOI18N
        txttotdis.setBounds(450, 490, 120, 20);
        jDesktopPane1.add(txttotdis, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        tblPo1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPo1.setName("tblPo1"); // NOI18N
        tblPo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPo1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPo1);

        jScrollPane3.setBounds(10, 290, 950, 190);
        jDesktopPane1.add(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton2.setText("AMMEND");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.setBounds(460, 540, 100, 30);
        jDesktopPane1.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton3.setText("SEARCH");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.setBounds(360, 540, 90, 30);
        jDesktopPane1.add(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel17.setText("Item Name:");
        jLabel17.setName("jLabel17"); // NOI18N
        jLabel17.setBounds(650, 20, 80, 14);
        jDesktopPane1.add(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel18.setText("Unit:");
        jLabel18.setName("jLabel18"); // NOI18N
        jLabel18.setBounds(650, 50, 60, 20);
        jDesktopPane1.add(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel19.setText("Rejected Qty:");
        jLabel19.setName("jLabel19"); // NOI18N
        jLabel19.setBounds(650, 200, 100, 20);
        jDesktopPane1.add(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel20.setText("Ordered Quantity:");
        jLabel20.setName("jLabel20"); // NOI18N
        jLabel20.setBounds(650, 80, 100, 14);
        jDesktopPane1.add(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel21.setText("Previous Received Qty:");
        jLabel21.setName("jLabel21"); // NOI18N
        jLabel21.setBounds(650, 110, 140, 20);
        jDesktopPane1.add(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtitemname.setName("txtitemname"); // NOI18N
        txtitemname.setBounds(800, 20, 140, 20);
        jDesktopPane1.add(txtitemname, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton4.setText("Add to Stock");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.setBounds(690, 260, 110, 23);
        jDesktopPane1.add(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton5.setText("Add All ");
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.setBounds(810, 260, 90, 23);
        jDesktopPane1.add(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtDcNo.setName("txtDcNo"); // NOI18N
        txtDcNo.setBounds(800, 230, 140, 20);
        jDesktopPane1.add(txtDcNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtUnitt1.setName("txtUnitt1"); // NOI18N
        txtUnitt1.setBounds(800, 50, 140, 20);
        jDesktopPane1.add(txtUnitt1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtord1.setName("txtord1"); // NOI18N
        txtord1.setBounds(800, 80, 140, 20);
        jDesktopPane1.add(txtord1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtprevrec.setName("txtprevrec"); // NOI18N
        txtprevrec.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtprevrecCaretUpdate(evt);
            }
        });
        txtprevrec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprevrecActionPerformed(evt);
            }
        });
        txtprevrec.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtprevrecInputMethodTextChanged(evt);
            }
        });
        txtprevrec.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtprevrecPropertyChange(evt);
            }
        });
        txtprevrec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtprevrecKeyTyped(evt);
            }
        });
        txtprevrec.setBounds(800, 110, 140, 20);
        jDesktopPane1.add(txtprevrec, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel22.setText("Received Quantity:");
        jLabel22.setName("jLabel22"); // NOI18N
        jLabel22.setBounds(650, 140, 130, 20);
        jDesktopPane1.add(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtrcvd2.setName("txtrcvd2"); // NOI18N
        txtrcvd2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtrcvd2CaretUpdate(evt);
            }
        });
        txtrcvd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrcvd2ActionPerformed(evt);
            }
        });
        txtrcvd2.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtrcvd2InputMethodTextChanged(evt);
            }
        });
        txtrcvd2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtrcvd2PropertyChange(evt);
            }
        });
        txtrcvd2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtrcvd2KeyTyped(evt);
            }
        });
        txtrcvd2.setBounds(800, 140, 140, 20);
        jDesktopPane1.add(txtrcvd2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtPONo1.setBackground(new java.awt.Color(255, 255, 204));
        txtPONo1.setEnabled(false);
        txtPONo1.setName("txtPONo1"); // NOI18N
        txtPONo1.setBounds(450, 20, 180, 20);
        jDesktopPane1.add(txtPONo1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel23.setText("Pending Quantity:");
        jLabel23.setName("jLabel23"); // NOI18N
        jLabel23.setBounds(650, 170, 100, 20);
        jDesktopPane1.add(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtpen1.setName("txtpen1"); // NOI18N
        txtpen1.setBounds(800, 170, 140, 20);
        jDesktopPane1.add(txtpen1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel24.setText("D.C.No:");
        jLabel24.setName("jLabel24"); // NOI18N
        jLabel24.setBounds(650, 230, 100, 20);
        jDesktopPane1.add(jLabel24, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtRejectedQty.setText("0");
        txtRejectedQty.setName("txtRejectedQty"); // NOI18N
        txtRejectedQty.setBounds(800, 200, 140, 20);
        jDesktopPane1.add(txtRejectedQty, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel25.setText("Grr No:");
        jLabel25.setName("jLabel25"); // NOI18N
        jLabel25.setBounds(10, 244, 50, 20);
        jDesktopPane1.add(jLabel25, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtGrrNo.setBackground(new java.awt.Color(255, 255, 204));
        txtGrrNo.setName("txtGrrNo"); // NOI18N
        txtGrrNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrrNoActionPerformed(evt);
            }
        });
        txtGrrNo.setBounds(70, 240, 80, 20);
        jDesktopPane1.add(txtGrrNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1001, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1037)/2, (screenSize.height-642)/2, 1037, 642);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       try{
          
System.out.println(date);  
        btnUPDATE.setEnabled(false);
        btnADDMaterial.setEnabled(false);
        btnDELETE.setEnabled(false);
        btnADD1.setEnabled(false);
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        tblPo1.setModel(model);
        model.addColumn("Sr.No.");
        model.addColumn("Description");
        model.addColumn("Make");
        model.addColumn("Unit");
        model.addColumn("Tax(%)");
        model.addColumn("Discount %");
        model.addColumn("Dis Amt");
        model.addColumn("Quantity");
        model.addColumn("Rate");       
        model.addColumn("Amount"); 
        model.addColumn("Tax Amt");  
        model.addColumn("Total Amount");
        model.addColumn("Pending Qty");  
        
//          tblSupp.setModel(model1);
             model1.addColumn("P.O.NO");
             model1.addColumn("P.O.Date");
             model1.addColumn("Item Name");
             model1.addColumn("Qty");
             model1.addColumn("Price");
      
       // model.addColumn("Delivery Period");
        
//        model.getColumn(model[0]).setPreferredWidth(100);
//table.getColumn(columnNames[1]).setPreferredWidth(400);
        
       con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
       Statement st=con.createStatement();
        
        cmbTo.addItem("--Select Supplier Name--");
         //cmbUnit.addItem("--Select Unit--");
         cmbItem.addItem("--Select Item Name--");
       ResultSet rss=st.executeQuery("select name from tblSupplier");
        
        while(rss.next())
        {
                cmbTo.addItem(rss.getString("name"));
        }
        
        rss.close();
        
//        rss=st.executeQuery("select distinct(unit) from tblUnit");
//        
//        while(rss.next())
//        {
//                cmbUnit.addItem(rss.getString("unit"));
//        }
        
        rss.close();
        
         rss=st.executeQuery("select distinct(itemname) from tblitem");
          
        while(rss.next())
        {
                cmbItem.addItem(rss.getString("itemname"));
        }
        rss.close();
        
        rss=st.executeQuery("select max(pono) from tblpurchaseorder");
           String pono;
        while(rss.next())
        {
         int po=rss.getInt(1);       
        //System.out.print(po);
        
        if( po == 0 || po < 0  )
        {
             po=1;
            pono=String.valueOf(po);
           cmbTax.setText(pono);
           
            System.out.print(po);
        }
        else
        {
            po=rss.getInt(1);
             po+=1;
              pono=String.valueOf(po);
           cmbTax.setText(pono);
          //System.out.print(po);
        }
        }
        rss.close();
        // display();
       }
               
               
       catch(Exception e){
           System.out.print(e);
       }
        
    }//GEN-LAST:event_formWindowOpened

    private void btnADDMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDMaterialActionPerformed
        try {
       
            con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
            st=con.createStatement();
            
              if (txtInvNo.getText().trim().length()==0)
             {
                     JOptionPane.showMessageDialog(null,"Enter Reference Number.");
                     return;  
             }
              
              if (txtInvNo.getText().trim().length()==0)
             {
                     JOptionPane.showMessageDialog(null,"Enter P.O Number.");
                     return;  
             }
              
              if (dtPO.getText().trim().length()==0 || dtInv.getText().trim().length()==0 )
             {
                     JOptionPane.showMessageDialog(null,"Select Ref/P.O Date");
                     return;  
             }
              
             if (cmbItem.getSelectedItem().equals("--Select Item Name--") )
             {
                     JOptionPane.showMessageDialog(null,"Select Item Name");
                     return;  
             }
             
              if (cmbTo.getSelectedItem().equals("--Select Supplier Name--") )
             {
                     JOptionPane.showMessageDialog(null,"Select Supplier Name");
                     return;  
             }
              
 //               if (cmbUnit.equals("--Select Unit--") )
 //            {
 //                    JOptionPane.showMessageDialog(null,"Select Unit");
 //                    return;  
 //            }
             
              if (txtUnit.getText().trim().length()==0 )
             {
                     JOptionPane.showMessageDialog(null,"Enter Quantity.");
                     return;  
             } 
              
             
              if (txtRate.getText().trim().length()==0)
             {
                     JOptionPane.showMessageDialog(null,"Enter Rate.");
                     return;  
             } 
              
              if (rd1.isSelected()==false && rd2.isSelected()==false && rd3.isSelected()==false)
             {
                     JOptionPane.showMessageDialog(null,"Select Tax Type");
                     return;  
             }
              
              if(txtDiscount.getText().equals("")){
                  txtDiscount.setText("0");
              }
             
              // tblSupp.setModel(model);
               String desc="";
               String item=cmbItem.getSelectedItem().toString();
               String unit=txtUnit.getText().toString();
               String tax=cmbTax.getText();
               String qty=txtQty.getText();
               String rate=txtRate.getText();
               String d=txtDiscount.getText();
               // String amount=txtRate.getText();
               // String del=txtDeliveryPeriod.getText();
               
              double amount=Integer.parseInt(qty)*Double.parseDouble(rate);
              double dis=(Double.parseDouble(d)*amount)/100;
              amount=amount-dis;
              taxAmt =(amount*Double.parseDouble(tax))/100;
              totalAmount=amount+taxAmt;
              
              ResultSet rs=st.executeQuery("select description from tblitem where itemname='"+cmbItem.getSelectedItem()+"'");
             if(rs.next()){
                 desc=item+" "+rs.getString("description");           
             }        
               i=model.getRowCount();
                if(i<0 )
                {
                    i=1;
                }
                else
                {
                    i =i+1;
                }
                 model.addRow(new Object[]{i,desc,unit,tax,d,dis,qty,rate,amount,taxAmt,totalAmount});
                 
                 double tot=0,totdis=0,tottax=0;
                 
                 for (i = 0; i < model.getRowCount(); i++){
                     totdis +=Double.parseDouble(model.getValueAt(i, 5).toString());
                     tottax +=Double.parseDouble(model.getValueAt(i, 9).toString());
                     tot += Double.parseDouble(model.getValueAt(i, 10).toString());                                                     
                }
                
                 String total=String.valueOf(tot);
                 txtTotal.setText(total);
                 txttotdis.setText(String.valueOf(totdis));
                 txttottax.setText(String.valueOf(tottax));
                 
                 txtRate.setText("");
                 txtQty.setText("");
                 txtDiscount.setText("");
                 txtUnit.setText("");
                 cmbItem.requestFocus();
                 
        } catch (SQLException ex) {
            Logger.getLogger(frmReceived.class.getName()).log(Level.SEVERE, null, ex);
        }                
               
    }//GEN-LAST:event_btnADDMaterialActionPerformed

    private void btnUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPDATEActionPerformed
        try{
//           con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//          Statement st=con.createStatement();
//          
//          int i=st.executeUpdate("update tblsupplier set code='"+txtCode.getText()+"', name='"+txtName.getText()+"', ph='"+txtPhone.getText()+"', mob="+txtMobile.getText()+" "
//                  + ", email='"+txtEmail.getText()+"', fax='"+txtFax.getText()+"', pan="+txtPAN.getText()+" "
//                  + ", exnum="+txtExcise.getText()+", gstno='"+txtGST.getText()+"', address='"+txtAddr.getText()+"' city='"+txtCity.getText()+"'"
//                  + ", state='"+txtState.getText()+"', pin='"+txtPin.getText()+"', country='"+txtCountry.getText()+"' bank_name='"+txtBank.getText()+"'"
//                  + ", bank_branch='"+txtBranch.getText()+"', bank_city='"+txtBankCity.getText()+"' acc_num='"+txtAcc.getText()+"', ifsc_code='"+txtIFSC.getText()+"'   where id="+txtID.getText()+"");
//          if(i>0){
//              JOptionPane.showMessageDialog(rootPane, "Supplier Details Updated Successfully");
//              display();
//          }
//          else
//          {
//                JOptionPane.showMessageDialog(rootPane, "Error in Updation");
//          }
       }
       catch(Exception e){
           System.out.print(e);
       }
    }//GEN-LAST:event_btnUPDATEActionPerformed

    private void btnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELETEActionPerformed
        try{
//           con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//           Statement st=con.createStatement();
//           int i=st.executeUpdate("Delete from tblSupplier where id="+txtID.getText()+"");
//           
//               int dialogButton = JOptionPane.YES_NO_OPTION;
//               int dialogResult = JOptionPane.showConfirmDialog (null, "Would You Like to Delete?","Warning",dialogButton);
//                if(dialogResult == JOptionPane.YES_OPTION){
//                    if(i>0){
//                   JOptionPane.showMessageDialog(rootPane, "Deleted Successfully");
//                   display();
//                }
//                   else
//                {
//                   JOptionPane.showMessageDialog(rootPane, "Deleted Successfully");
//                }
//                }
//                else if(dialogResult == JOptionPane.NO_OPTION)
//                {
//                    
//                    btnADD.setEnabled(true);
//                    btnUPDATE.setEnabled(false);
//                    btnDELETE.setEnabled(false);
//                    display();
//                }
              
        }
        catch(Exception e){
            System.out.print(e);
        }
          
    }//GEN-LAST:event_btnDELETEActionPerformed

    private void cmbItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemItemStateChanged
       try{
           con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
           st=con.createStatement();
           ResultSet rs=st.executeQuery("select rate,uom,tax from tblitem where itemname='"+cmbItem.getSelectedItem()+"'");
           if(rs.next()){
               txtRate.setText(rs.getString("rate"));
               txtUnit.setText(rs.getString("uom"));
               cmbTax.setText(rs.getString("tax"));
           }
       }
       catch(Exception e){
           System.out.print(e);
       }
    }//GEN-LAST:event_cmbItemItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try{
        st=db.dbConn();
      
        int i=tblPo1.getSelectedRow();
        int k=JOptionPane.showConfirmDialog(rootPane, "Do you want to Delete Record");
        JOptionPane.showMessageDialog(rootPane, k);
        if(k==0){
      //JOptionPane.showMessageDialog(rootPane, i);
      for(int j=0;j<model.getRowCount();j++){
          model.removeRow(i);
         //st.executeUpdate("delete from tblpurchaseorderdetails where item_code='"+tblPo1.getValueAt(j, 1)+"' and pono="+txtPONo.getText()+"");
      }
      JOptionPane.showMessageDialog(rootPane, "Deleted Successfully");
     // display();
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Error in Deletion");
        }
      }
      catch(Exception e){
          System.out.println(e);
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblPo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPo1MouseClicked
        try {
            
             st=db.dbConn();
            DefaultTableModel model=(DefaultTableModel)tblPo1.getModel();
            int selectedRow=tblPo1.getSelectedRow();
            
            
            String itemname=tblPo1.getValueAt(selectedRow, 1).toString();
            String unit=tblPo1.getValueAt(selectedRow, 3).toString();
            String qty=tblPo1.getValueAt(selectedRow, 7).toString();
            
            System.out.append(qty+" "+unit+" "+itemname);
             txtitemname.setText(itemname);
             txtUnitt1.setText(unit);
             txtord1.setText(qty);
             
             String p=tblPo1.getValueAt(selectedRow, 12).toString();
             //JOptionPane.showMessageDialog(rootPane,p);
             txtpen1.setText(p);
            // 
             double rec=0;
             Statement st1;
             st1=db.dbConn();
             ResultSet rss=st1.executeQuery("select recvdqty from tblreceived where pono="+txtPONo1.getText()+" and itemname='"+tblPo1.getValueAt(selectedRow,1).toString() +"'");
             while(rss.next()){
                String r=rss.getString("recvdqty");
                rec+=Double.parseDouble(r); 
                System.out.print(rec);
             }
             //double ord=(Double.parseDouble(qty))-(rec);
             double ord=rec;
             System.out.println(ord);
             
             String ordQty=String.valueOf(ord);
             txtprevrec.setText(ordQty);
             
            
             ResultSet rs=st.executeQuery("select dcno from tblreceived where pono='"+txtPONo1.getText()+"'");
             if(rs.next())
             {
                 txtDcNo.setText(rs.getString(1));
             }
             
        } catch (SQLException ex) {
            Logger.getLogger(frmReceived.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_tblPo1MouseClicked

    private void cmbToItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbToItemStateChanged
//        try {
//            
//            con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//            st=con.createStatement();
//            int i=0;
//            int j=1;
//             System.out.println(cmbTo.getSelectedItem());
//            ResultSet rs=st.executeQuery("select * from tblpurchaseorder where name='"+cmbTo.getSelectedItem()+"'");
//           
//             if(rs.next())
//         {
//             while(model1.getRowCount()>0){
//             for(int ii=0;ii<model1.getRowCount();ii++){
//                 model1.removeRow(ii);
//                 
//             }
//             }
//             i=rs.getInt("pono");
//             String dt=rs.getString("podate");
//             ResultSet rs1=st.executeQuery("select * from tblpurchaseorderdetails where pono="+i+"");
//             
//             while(rs1.next()){
//             System.out.println(j);
//             model1.addRow(new Object[]{rs1.getString("pono"),dt,rs1.getString("itemname"),rs1.getString("qty"),rs1.getString("amount")});
//             j=j+1;
//         }
//         }
//        } catch (SQLException ex) {
//            Logger.getLogger(frmStock.class.getName()).log(Level.SEVERE, null, ex);
//        }
            
    }//GEN-LAST:event_cmbToItemStateChanged

    private void cmbToMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbToMouseClicked
//try {
//            con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//            st=con.createStatement();
//            int i=0;
//            //int j=1;
//             System.out.println(cmbTo.getSelectedItem());
//            ResultSet rs=st.executeQuery("select * from tblpurchaseorder where name='"+cmbTo.getSelectedItem()+"'");
//           
//             if(rs.next())
//         {
//             i=rs.getInt("pono");
//             String dt=rs.getString("podate");
//             ResultSet rs1=st.executeQuery("select * from tblpurchaseorderdetails where pono="+i+"");
//             
//             while(rs1.next()){
//             //System.out.println(j);
//             model1.addRow(new Object[]{rs1.getString("pono"),dt,rs1.getString("itemname"),rs1.getString("qty"),rs1.getString("amount")});
//            // j=j+1;
//         }
//         }
//        } catch (SQLException ex) {
//            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_cmbToMouseClicked

    private void cmbToMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbToMouseReleased
//        try {
//            con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
//            st=con.createStatement();
//            int i=0;
//            //int j=1;
//             System.out.println(cmbTo.getSelectedItem());
//            ResultSet rs=st.executeQuery("select * from tblpurchaseorder where name='"+cmbTo.getSelectedItem()+"'");
//           
//             if(rs.next())
//         {
//             i=rs.getInt("pono");
//             String dt=rs.getString("podate");
//             ResultSet rs1=st.executeQuery("select * from tblpurchaseorderdetails where pono="+i+"");
//             
//             while(rs1.next()){
//             //System.out.println(j);
//             model1.addRow(new Object[]{rs1.getString("pono"),dt,rs1.getString("itemname"),rs1.getString("qty"),rs1.getString("amount")});
//            // j=j+1;
//         }
//         }
//        } catch (SQLException ex) {
//            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_cmbToMouseReleased

    private void cmbToMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbToMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbToMousePressed

    private void cmbToMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbToMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbToMouseEntered

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            String po=JOptionPane.showInputDialog("Enter P.O Number");
            
             while(model.getRowCount()>0){
                 for(int ii=0;ii<model.getRowCount();ii++){
                     model.removeRow(ii);
                     
                 }
             }
             
             st=db.dbConn();
             
             ResultSet rs=st.executeQuery("select * from tblpurchaseorder,tblpurchaseorderdetails where tblpurchaseorder.pono="+po+" and tblpurchaseorderdetails.pono="+po+"");
             if(rs.next()){
                 txtPONo1.setText(po);
                 //txtInvNo.setText(rs.getString("refno"));
                
                 String dtref=rs.getString("refdate");
                 dtInv.setText(rs.getString("refdate"));                  
                 dtPO.setText(rs.getString("podate"));                 
                 cmbTo.setSelectedItem(rs.getString("name"));
                 txtDiscount.setText(rs.getString("totaldis"));
                 txttottax.setText(rs.getString("totaltax"));
                  cmbTax.setText(rs.getString("taxrate"));
                  String make= rs.getString("make");
                   txtGrrNo.setText(rs.getString("grrno"));
                 
                 String tax=rs.getString("taxtype");
                 if(tax.equals("SGST"))
                 {
                     rd1.setSelected(true);
                 }
                 else if(tax.equals("IGST")){
                     rd2.setSelected(true);
                 }
                 else
                 {
                     rd3.setSelected(true);
                 }
                 txtTotal.setText(rs.getString("gt"));
                 
                 rs=st.executeQuery("select * from tblpurchaseorderdetails where pono="+po+"");
                 int sl=1;
                 while(rs.next()){
                     String item=rs.getString("itemname");
                     String uom=rs.getString("uom");
                     int qty=rs.getInt("qty");
                     double rate=rs.getDouble("rate");
                     double amt=rs.getDouble("amount");
                     double tax1=rs.getDouble("taxrate");
                     double taxamt=rs.getDouble("taxamt");
                     double disper=rs.getDouble("disper");
                      double pen=rs.getDouble("pendqty");
                     double disamt=0,amount=0;
                     
                     if(disper > 0){
                         disamt=((rate*qty)*disper)/100;
                          }
                     
                   amount=amt-disamt;
                   model.addRow(new Object[]{sl,item,make,uom,tax1,disper,disamt,qty,rate,amount,taxamt,amt,pen});
                   sl +=1;
                 }
                 
             }
             else
             {
                 JOptionPane.showMessageDialog(rootPane, "Invalid P.O Number");
             }
        } catch (SQLException ex) {
            Logger.getLogger(frmReceived.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtprevrecInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtprevrecInputMethodTextChanged
        
    }//GEN-LAST:event_txtprevrecInputMethodTextChanged

    private void txtprevrecKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprevrecKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprevrecKeyTyped

    private void txtprevrecPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtprevrecPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprevrecPropertyChange

    private void txtprevrecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprevrecActionPerformed
      
    }//GEN-LAST:event_txtprevrecActionPerformed

    private void txtprevrecCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtprevrecCaretUpdate
       if(txtprevrec.getText().equals("")){
           return;
       }
       if(txtDcNo.equals("")){
           JOptionPane.showMessageDialog(rootPane, "Enter D.C Number");
       }
        String rec=txtprevrec.getText();        
        double totqty=Double.parseDouble(txtord1.getText());
        double revd=Double.parseDouble(rec);
        double pending=totqty - revd;        
        txtpen1.setText(String.valueOf(pending));
    }//GEN-LAST:event_txtprevrecCaretUpdate

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
        st=db.dbConn();   
        int k,l;
       
        
        
        String datePattern = "yyyy-M-dd";
                 SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);
              dtInv.setDateFormat(dateFormatter);
              dtPO.setDateFormat(dateFormatter);
        //ResultSet rss=st.executeQuery("select * from tblreceived,tblpurchaseorderdetails where tblreceived.pono="+txtPONo1.getText()+" and tblreceived.itemname='"+txtitemname.getText()+"' and tblpurchaseorderdetails.qty<tblreceived.recvdqty");
              
              float pnd=0;

              
              ResultSet r2=st.executeQuery("select pendqty from tblpurchaseorderdetails where itemname='"+txtitemname.getText()+"' and pono="+txtPONo1.getText()+"");
              if(r2.next()){
                  pnd=r2.getFloat(1);
              }
//        ResultSet rss=st.executeQuery("select * from tblpurchaseorderdetails where tblpurchaseorderdetails.pono="+txtPONo1.getText()+" and tblpurchaseorderdetails.qty>tblpurchaseorderdetails.pendqty");
//        System.out.print("select * from tblpurchaseorderdetails where tblpurchaseorderdetails.pono="+txtPONo1.getText()+" and tblpurchaseorderdetails.pendqty<=tblpurchaseorderdetails.qty");
        if(pnd==0){
//            float t1=Float.parseFloat(txtord1.getText());
//            float t2=Float.parseFloat(txtprevrec.getText());
//            float rcv=Float.parseFloat(txtrcvd2.getText());
//            if((t1+t2)==rcv){
                
  //          }
            
           
                JOptionPane.showMessageDialog(rootPane, "Material is All ready Received with P.O No.");
                return;
        }
        else{
             if(txtInvNo.getText().length()==0){
            JOptionPane.showMessageDialog(rootPane, "Enter Invoice No");
            return;
        }
        
        if(txtitemname.getText().length()==0 || txtprevrec.getText().length()==0 || txtRejectedQty.getText().length()==0 || txtrcvd2.getText().length()==0 || txtUnitt1.getText().length()==0 || txtpen1.getText().length()==0) {
            JOptionPane.showMessageDialog(rootPane, "Select Items From List/Enter Required Details");
            return;
        }
        if(txtDcNo.getText().length()==0){
            JOptionPane.showMessageDialog(rootPane,"Enter Delevery Challan No");
            return;
        }
        
        
        
        int i=st.executeUpdate("update tblpurchaseorderdetails set pendqty="+txtpen1.getText()+" where pono="+txtPONo1.getText()+" and itemname='"+txtitemname.getText()+"'");
        
        int j=st.executeUpdate("insert into tblreceived values(null,'"+txtInvNo.getText()+"','"+dtInv.getText()+"',"+txtPONo1.getText()+",'"+txtitemname.getText()+"','"+txtUnitt1.getText()+"',"+txtrcvd2.getText()+",'"+txtDcNo.getText()+"','"+txtRejectedQty.getText()+"',"+txtGrrNo.getText()+")"); 
         JOptionPane.showMessageDialog(rootPane, "Stock Updated");
        ResultSet rs=st.executeQuery("select * from tblstock where itemname='"+txtitemname.getText()+"'");
        if(rs.next()){
           k=st.executeUpdate("update tblstock set total_qty=total_qty+"+txtrcvd2.getText()+" where itemname='"+txtitemname.getText()+"'");
          
        }
        else{
        k=st.executeUpdate("insert into tblstock values(null,'"+txtitemname.getText()+"',"+txtrcvd2.getText()+")");
        st.executeUpdate("insert into tblstockdatewise values(null,'"+txtitemname.getText()+"',"+txtrcvd2.getText()+",'"+date+"')");
        }
        
        if(i>0 && j>0 && k>0){
            JOptionPane.showMessageDialog(rootPane,"Stock Updated");
            txtitemname.setText("");
            txtUnit.setText("");
            txtord1.setText("");
            txtprevrec.setText("");
            txtrcvd2.setText("");
            txtpen1.setText("");
        }
        }
        }
        catch (SQLException ex) {
            Logger.getLogger(frmReceived.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtrcvd2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtrcvd2CaretUpdate
      if(txtrcvd2.getText().equals("")){
          txtrcvd2.setText("0");
      }     
        
      double ordered=Double.parseDouble(txtord1.getText());
      double prevrecd=Double.parseDouble(txtprevrec.getText());
      double rec=Double.parseDouble(txtrcvd2.getText());
      
      if(rec < 0 ){
          JOptionPane.showMessageDialog(rootPane,"Material All ready Received");
           txtitemname.setText("");
            txtUnitt1.setText("");
            txtord1.setText("");
            txtprevrec.setText("");
            txtrcvd2.setText("");
            txtDcNo.setText("");
          return;
      }
      
     double pend=(ordered-prevrecd)-(rec);
      txtpen1.setText(String.valueOf(pend));
    }//GEN-LAST:event_txtrcvd2CaretUpdate

    private void txtrcvd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrcvd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrcvd2ActionPerformed

    private void txtrcvd2InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtrcvd2InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrcvd2InputMethodTextChanged

    private void txtrcvd2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtrcvd2PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrcvd2PropertyChange

    private void txtrcvd2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrcvd2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrcvd2KeyTyped

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
           try { 
               
               st=db.dbConn(); 
                         String datePattern = "yyyy-M-dd";
                         SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);
                         dtInv.setDateFormat(dateFormatter);
                         dtPO.setDateFormat(dateFormatter);              
                          
             int k,l;
             double pend=0;
                          ResultSet rss=st.executeQuery("select pono from tblreceived where pono="+txtPONo1.getText()+"");
                           if(rss.next()){
                               JOptionPane.showMessageDialog(rootPane, "Material All ready Received");
                            }
                              
                           else{
                               if(txtInvNo.getText().length()==0){
                              JOptionPane.showMessageDialog(rootPane, "Enter Invoice No");
                            }
                          if(txtDcNo.getText().length()==0){
                              JOptionPane.showMessageDialog(rootPane,"Ente Delivery Challan Number");
                            }
                          
                          if(txtInvNo.getText().length()!=0 && txtDcNo.getText().length()!=0)
                          {
        for(int i = 0; i < model.getRowCount(); i++){ 
        int ii=st.executeUpdate("update tblpurchaseorderdetails set pendqty="+pend+" where pono="+txtPONo1.getText()+" and itemname='"+tblPo1.getValueAt(i, 1).toString() +"'");
       // System.out.print("insert into tblreceived values(null,'"+txtInvNo.getText()+"','"+dtInv.getText()+"',"+txtPONo.getText()+",'"+tblPo1.getValueAt(i, 1)+"','"+tblPo1.getValueAt(i, 2)+"',"+tblPo1.getValueAt(i, 6) +")");
        int j=st.executeUpdate("insert into tblreceived values(null,'"+txtInvNo.getText()+"','"+dtInv.getText()+"',"+txtPONo1.getText()+",'"+tblPo1.getValueAt(i, 1)+"','"+tblPo1.getValueAt(i, 3)+"',"+tblPo1.getValueAt(i, 7) +",'"+txtDcNo.getText()+"','"+txtRejectedQty.getText()+"',"+txtGrrNo.getText()+")"); 
       
         ResultSet rs=st.executeQuery("select * from tblstock where itemname='"+tblPo1.getValueAt(i, 1)+"'");
        if(rs.next()){
           k=st.executeUpdate("update tblstock set total_qty="+tblPo1.getValueAt(i, 7)+" where itemname='"+tblPo1.getValueAt(i, 1)+"'");
           l=st.executeUpdate("update tblstockdatewise set total_qty="+tblPo1.getValueAt(i, 7)+" where itemname='"+tblPo1.getValueAt(i, 1)+"'");
           JOptionPane.showMessageDialog(rootPane,"Stock Updated");
        }
        else{
        k=st.executeUpdate("insert into tblstock values(null,'"+tblPo1.getValueAt(i, 1)+"',"+tblPo1.getValueAt(i, 7)+")");
         l=st.executeUpdate("insert into tblstockdatewise values(null,'"+tblPo1.getValueAt(i, 1)+"',"+tblPo1.getValueAt(i, 7)+",'"+date+"')");
         JOptionPane.showMessageDialog(rootPane,"Stock Updated");
        }
             }
                          }
               
        }
//        if(ii>0 && j>0 && k>0){
//               
//            txtitemname.setText("");
//            txtUnit.setText("");
//            txtord1.setText("");
//            txtprevrec.setText("");
//            txtrcvd2.setText("");
//            txtpen.setText("");
//        }
        
    
        
           }catch (SQLException ex) {
                Logger.getLogger(frmReceived.class.getName()).log(Level.SEVERE, null, ex);
            }
          
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtGrrNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrrNoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtGrrNoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //        try {
        //            st=db.dbConn();
        //
        //            int i=st.executeUpdate("delete from tblpurchaseorder  where pono="+txtPONo.getText()+"");
        //            int j=st.executeUpdate("delete from tblpurchaseorderdetails  where pono="+txtPONo.getText()+"");
        //
        //
        //
        //            String taxtype="";
        //
        //            if(rd1.isSelected()==true){
        //                taxtype="SGST";
        //            }else if(rd2.isSelected()==true){
        //                taxtype="IGST";
        //            }else{
        //                taxtype="IIGST";
        //            }
        //           // con.setAutoCommit(false);
        //
        //           i=st.executeUpdate("insert into tblpurchaseorder(pono,refno,refdate,podate,name,totaldis,totaltax,taxtype,gt,delv_date,pack_cost,transp_cost,payment_terms,grrno) values("+ txtPONo1.getText() +",'"+ txtRate.getText() +"','"+ dtRef.getText() +"','"+ dtPO.getText() +"','"+ cmbTo.getSelectedItem() +"',"+ txttotdis.getText() +","+ txttottax.getText() +",'"+ taxtype +"',"+ txtTotal.getText() +",'"+dtDeliveryDate.getText()+"','"+txtPackingCost.getText()+"','"+txtTranpotation.getText()+"','"+txtPaymentTerms.getText()+"',"+txtGrrNo.getText()+")");
        //            for(i = 0; i < model.getRowCount(); i++){
        //                   st.executeUpdate("insert into tblpurchaseorderdetails values("+ txtPONo1.getText() +",'"+ tblPo1.getValueAt(i, 1) +"','"+ tblPo1.getValueAt(i, 2) +"','"+ tblPo1.getValueAt(i, 4) +"',"+ tblSupp.getValueAt(i, 8) +","+ tblSupp.getValueAt(i, 9) +","+ tblSupp.getValueAt(i, 12) +","+ tblSupp.getValueAt(i, 5) +","+ tblSupp.getValueAt(i, 11) +", "+ tblSupp.getValueAt(i, 6) +","+ tblSupp.getValueAt(i, 8) +",'"+ tblSupp.getValueAt(i, 3) +"',"+txtGrrNo.getText()+")");
        //                }
        //            if(i>0){
        //                JOptionPane.showMessageDialog(rootPane, "Purchase Order Updated successfully");
        ////              for (int j = i; j < model.getRowCount(); j--){
        ////                model.removeRow(j);
        ////            }
        //            }
        //           // con.commit();
        //
        //        } catch (SQLException ex) {
        //            Logger.getLogger(frmPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
        //        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnADD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADD1ActionPerformed
        try {
            con=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
            st=con.createStatement();
            String taxtype="";
            
            if(rd1.isSelected()==true){
                taxtype="SGST";
            }else if(rd2.isSelected()==true){
                taxtype="IGST";
            }else{
                taxtype="IIGST";
            }
            con.setAutoCommit(false);
            i=st.executeUpdate("insert into tblpurchaseorder(pono,refno,refdate,podate,name,totaldis,totaltax,taxtype,gt) values("+ cmbTax.getText() +",'"+ txtInvNo.getText() +"','"+ dtInv.getText() +"','"+ dtPO.getText() +"','"+ cmbTo.getSelectedItem() +"',"+ txttotdis.getText() +","+ txttottax.getText() +",'"+ taxtype +"',"+ txtTotal.getText() +")");
            for(i = 0; i < model.getRowCount(); i++){
                //                  st.executeUpdate("insert into tblpurchaseorderdetails values("+ txtPONo.getText() +",'"+ tblSupp.getValueAt(i, 1) +"','"+ tblSupp.getValueAt(i, 2) +"',"+ tblSupp.getValueAt(i, 6) +","+ tblSupp.getValueAt(i, 7) +","+ tblSupp.getValueAt(i, 10) +","+ tblSupp.getValueAt(i, 3) +","+ tblSupp.getValueAt(i, 9) +", "+ tblSupp.getValueAt(i, 4) +")");
            }
            if(i>0){
                JOptionPane.showMessageDialog(rootPane, "Purchase Order Generated successfully");
                //              for (int j = i; j < model.getRowCount(); j--){
                //                model.removeRow(j);
                //            }
            }
            con.commit();
        } catch (SQLException ex) {
            try {
                con.rollback();
                Logger.getLogger(frmReceived.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex1) {
                Logger.getLogger(frmReceived.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
    }//GEN-LAST:event_btnADD1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frmReceived().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD1;
    private javax.swing.JButton btnADDMaterial;
    private javax.swing.JButton btnDELETE;
    private javax.swing.JButton btnUPDATE;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbItem;
    private javax.swing.JTextField cmbTax;
    private javax.swing.JComboBox cmbTo;
    private datechooser.beans.DateChooserCombo dtInv;
    private datechooser.beans.DateChooserCombo dtPO;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton rd1;
    private javax.swing.JRadioButton rd2;
    private javax.swing.JRadioButton rd3;
    private javax.swing.JTable tblPo1;
    private javax.swing.JTextField txtDcNo;
    private javax.swing.JTextField txtDeliveryPeriod;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtGrrNo;
    private javax.swing.JTextField txtInvNo;
    private javax.swing.JTextField txtPONo1;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtRate;
    private javax.swing.JTextField txtRejectedQty;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtUnit;
    private javax.swing.JTextField txtUnitt1;
    private javax.swing.JTextField txtitemname;
    private javax.swing.JTextField txtord1;
    private javax.swing.JTextField txtpen1;
    private javax.swing.JTextField txtprevrec;
    private javax.swing.JTextField txtrcvd2;
    private javax.swing.JTextField txttotdis;
    private javax.swing.JTextField txttottax;
    // End of variables declaration//GEN-END:variables
}
